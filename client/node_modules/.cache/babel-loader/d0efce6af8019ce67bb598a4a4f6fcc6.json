{"ast":null,"code":"import { FETCH_ALL, FETCH_BY_SEARCH, FETCH_POST, CREATE, UPDATE, DELETE, LIKE, COMMENT } from \"../constants/actionTypes\";\nexport default ((state = {\n  isLoading: true,\n  posts: []\n}, action) => {\n  switch (action.type) {\n    case \"START_LOADING\":\n      return { ...state,\n        isLoading: true\n      };\n\n    case \"END_LOADING\":\n      return { ...state,\n        isLoading: false\n      };\n\n    case FETCH_ALL:\n      return { ...state,\n        posts: action.payload.data,\n        currentPage: action.payload.currentPage,\n        numberOfPages: action.payload.numberOfPages\n      };\n\n    case FETCH_BY_SEARCH:\n      return { ...state,\n        posts: action.payload.data\n      };\n\n    case FETCH_POST:\n      return { ...state,\n        post: action.payload.post\n      };\n\n    case LIKE:\n      return { ...state,\n        posts: state.posts.map(post => post._id === action.payload._id ? action.payload : post)\n      };\n\n    case COMMENT:\n      console.log(action.payload);\n      return { ...state,\n        posts: state.posts.map(post => {\n          if (post._id === action.payload._id) return action.payload;\n          return post;\n        })\n      };\n\n    case CREATE:\n      return { ...state,\n        posts: [...state.posts, action.payload]\n      };\n\n    case UPDATE:\n      return { ...state,\n        posts: state.posts.map(post => post._id === action.payload._id ? action.payload : post)\n      };\n\n    case DELETE:\n      return { ...state,\n        posts: state.posts.filter(post => post._id !== action.payload)\n      };\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/home/arokee/React_JS/mern-memo-app/client/src/reducers/posts.js"],"names":["FETCH_ALL","FETCH_BY_SEARCH","FETCH_POST","CREATE","UPDATE","DELETE","LIKE","COMMENT","state","isLoading","posts","action","type","payload","data","currentPage","numberOfPages","post","map","_id","console","log","filter"],"mappings":"AAAA,SACEA,SADF,EAEEC,eAFF,EAGEC,UAHF,EAIEC,MAJF,EAKEC,MALF,EAMEC,MANF,EAOEC,IAPF,EAQEC,OARF,QASO,0BATP;AAWA,gBAAe,CAACC,KAAK,GAAG;AAAEC,EAAAA,SAAS,EAAE,IAAb;AAAmBC,EAAAA,KAAK,EAAE;AAA1B,CAAT,EAAyCC,MAAzC,KAAoD;AACjE,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,eAAL;AACE,aAAO,EAAE,GAAGJ,KAAL;AAAYC,QAAAA,SAAS,EAAE;AAAvB,OAAP;;AACF,SAAK,aAAL;AACE,aAAO,EAAE,GAAGD,KAAL;AAAYC,QAAAA,SAAS,EAAE;AAAvB,OAAP;;AACF,SAAKT,SAAL;AACE,aAAO,EACL,GAAGQ,KADE;AAELE,QAAAA,KAAK,EAAEC,MAAM,CAACE,OAAP,CAAeC,IAFjB;AAGLC,QAAAA,WAAW,EAAEJ,MAAM,CAACE,OAAP,CAAeE,WAHvB;AAILC,QAAAA,aAAa,EAAEL,MAAM,CAACE,OAAP,CAAeG;AAJzB,OAAP;;AAMF,SAAKf,eAAL;AACE,aAAO,EAAE,GAAGO,KAAL;AAAYE,QAAAA,KAAK,EAAEC,MAAM,CAACE,OAAP,CAAeC;AAAlC,OAAP;;AACF,SAAKZ,UAAL;AACE,aAAO,EAAE,GAAGM,KAAL;AAAYS,QAAAA,IAAI,EAAEN,MAAM,CAACE,OAAP,CAAeI;AAAjC,OAAP;;AACF,SAAKX,IAAL;AACE,aAAO,EACL,GAAGE,KADE;AAELE,QAAAA,KAAK,EAAEF,KAAK,CAACE,KAAN,CAAYQ,GAAZ,CAAiBD,IAAD,IACrBA,IAAI,CAACE,GAAL,KAAaR,MAAM,CAACE,OAAP,CAAeM,GAA5B,GAAkCR,MAAM,CAACE,OAAzC,GAAmDI,IAD9C;AAFF,OAAP;;AAMF,SAAKV,OAAL;AACEa,MAAAA,OAAO,CAACC,GAAR,CAAYV,MAAM,CAACE,OAAnB;AACA,aAAO,EACL,GAAGL,KADE;AAELE,QAAAA,KAAK,EAAEF,KAAK,CAACE,KAAN,CAAYQ,GAAZ,CAAiBD,IAAD,IAAS;AAC9B,cAAGA,IAAI,CAACE,GAAL,KAAaR,MAAM,CAACE,OAAP,CAAeM,GAA/B,EAAoC,OAAOR,MAAM,CAACE,OAAd;AACpC,iBAAOI,IAAP;AACD,SAHM;AAFF,OAAP;;AASF,SAAKd,MAAL;AACE,aAAO,EAAE,GAAGK,KAAL;AAAYE,QAAAA,KAAK,EAAE,CAAC,GAAGF,KAAK,CAACE,KAAV,EAAiBC,MAAM,CAACE,OAAxB;AAAnB,OAAP;;AACF,SAAKT,MAAL;AACE,aAAO,EACL,GAAGI,KADE;AAELE,QAAAA,KAAK,EAAEF,KAAK,CAACE,KAAN,CAAYQ,GAAZ,CAAiBD,IAAD,IACrBA,IAAI,CAACE,GAAL,KAAaR,MAAM,CAACE,OAAP,CAAeM,GAA5B,GAAkCR,MAAM,CAACE,OAAzC,GAAmDI,IAD9C;AAFF,OAAP;;AAMF,SAAKZ,MAAL;AACE,aAAO,EACL,GAAGG,KADE;AAELE,QAAAA,KAAK,EAAEF,KAAK,CAACE,KAAN,CAAYY,MAAZ,CAAoBL,IAAD,IAAUA,IAAI,CAACE,GAAL,KAAaR,MAAM,CAACE,OAAjD;AAFF,OAAP;;AAIF;AACE,aAAOL,KAAP;AAjDJ;AAmDD,CApDD","sourcesContent":["import {\n  FETCH_ALL,\n  FETCH_BY_SEARCH,\n  FETCH_POST,\n  CREATE,\n  UPDATE,\n  DELETE,\n  LIKE,\n  COMMENT\n} from \"../constants/actionTypes\";\n\nexport default (state = { isLoading: true, posts: [] }, action) => {\n  switch (action.type) {\n    case \"START_LOADING\":\n      return { ...state, isLoading: true };\n    case \"END_LOADING\":\n      return { ...state, isLoading: false };\n    case FETCH_ALL:\n      return {\n        ...state,\n        posts: action.payload.data,\n        currentPage: action.payload.currentPage,\n        numberOfPages: action.payload.numberOfPages,\n      };\n    case FETCH_BY_SEARCH:\n      return { ...state, posts: action.payload.data };\n    case FETCH_POST:\n      return { ...state, post: action.payload.post };\n    case LIKE:\n      return {\n        ...state,\n        posts: state.posts.map((post) =>\n          post._id === action.payload._id ? action.payload : post\n        ),\n      };\n    case COMMENT:\n      console.log(action.payload);\n      return {\n        ...state,\n        posts: state.posts.map((post)=> {\n          if(post._id === action.payload._id) return action.payload;\n          return post;\n        })\n      };\n     \n\n    case CREATE:\n      return { ...state, posts: [...state.posts, action.payload] };\n    case UPDATE:\n      return {\n        ...state,\n        posts: state.posts.map((post) =>\n          post._id === action.payload._id ? action.payload : post\n        ),\n      };\n    case DELETE:\n      return {\n        ...state,\n        posts: state.posts.filter((post) => post._id !== action.payload),\n      };\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}