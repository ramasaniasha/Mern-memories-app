{"ast":null,"code":"import { FETCH_ALL, FETCH_POST, CREATE, UPDATE, DELETE, LIKE } from '../constants/actionTypes';\nimport * as api from '../api/index.js';\nexport const getPost = id => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.fetchPost(id);\n    dispatch({\n      type: FETCH_POST,\n      post: data\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const getPosts = () => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.fetchPosts();\n    dispatch({\n      type: FETCH_ALL,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const createPost = post => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.createPost(post);\n    dispatch({\n      type: CREATE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const updatePost = (id, post) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.updatePost(id, post);\n    dispatch({\n      type: UPDATE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const likePost = id => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.likePost(id);\n    dispatch({\n      type: LIKE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const deletePost = id => async dispatch => {\n  try {\n    await api.deletePost(id);\n    dispatch({\n      type: DELETE,\n      payload: id\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};","map":{"version":3,"sources":["/home/arokee/React_JS/mern-memo-app/client/src/actions/posts.js"],"names":["FETCH_ALL","FETCH_POST","CREATE","UPDATE","DELETE","LIKE","api","getPost","id","dispatch","data","fetchPost","type","post","error","console","log","message","getPosts","fetchPosts","payload","createPost","updatePost","likePost","deletePost"],"mappings":"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","sourcesContent":["import { FETCH_ALL, FETCH_POST,CREATE, UPDATE, DELETE, LIKE } from '../constants/actionTypes';\n\nimport * as api from '../api/index.js';\n\nexport const getPost = (id) => async (dispatch) => {\n  try {\n    const { data } = await api.fetchPost(id);\n    dispatch({ type: FETCH_POST, post: data });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const getPosts = () => async (dispatch) => {\n  try {\n    const { data } = await api.fetchPosts();\n\n    dispatch({ type: FETCH_ALL, payload: data });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const createPost = (post) => async (dispatch) => {\n  try {\n    const { data } = await api.createPost(post);\n\n    dispatch({ type: CREATE, payload: data });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const updatePost = (id, post) => async (dispatch) => {\n  try {\n    const { data } = await api.updatePost(id, post);\n\n    dispatch({ type: UPDATE, payload: data });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const likePost = (id) => async (dispatch) => {\n  try {\n    const { data } = await api.likePost(id);\n\n    dispatch({ type: LIKE, payload: data });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const deletePost = (id) => async (dispatch) => {\n  try {\n    await api.deletePost(id);\n\n    dispatch({ type: DELETE, payload: id });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n"]},"metadata":{},"sourceType":"module"}