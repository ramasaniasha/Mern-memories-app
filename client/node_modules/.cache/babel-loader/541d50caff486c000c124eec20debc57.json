{"ast":null,"code":"var _jsxFileName = \"/home/arokee/React_JS/mern-memo-app/client/src/components/Form/Form.js\";\nimport React, { useState, useEffect } from 'react';\nimport { TextField, Button, Typography, Paper } from '@material-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\nimport FileBase from 'react-file-base64';\nimport useStyles from './styles';\nimport { createPost, updatePost } from '../../actions/posts';\n\nconst Form = ({\n  currentId,\n  setCurrentId\n}) => {\n  const [postData, setPostData] = useState({\n    creator: '',\n    title: '',\n    message: '',\n    tags: '',\n    selectedFile: ''\n  });\n  const post = useSelector(state => currentId ? state.posts.find(message => message._id === currentId) : null);\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  useEffect(() => {\n    if (post) setPostData(post);\n  }, [post]);\n\n  const clear = () => {\n    setCurrentId(0);\n    setPostData({\n      creator: '',\n      title: '',\n      message: '',\n      tags: '',\n      selectedFile: ''\n    });\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    if (currentId === 0) {\n      dispatch(createPost(postData));\n      clear();\n    } else {\n      dispatch(updatePost(currentId, postData));\n      clear();\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    autoComplete: \"off\",\n    noValidate: true,\n    className: `${classes.root} ${classes.form}`,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, currentId ? `Editing \"${post.title}\"` : 'Creating a Memory'), /*#__PURE__*/React.createElement(TextField, {\n    name: \"creator\",\n    variant: \"outlined\",\n    label: \"Creator\",\n    fullWidth: true,\n    value: postData.creator,\n    onChange: e => setPostData({ ...postData,\n      creator: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    name: \"title\",\n    variant: \"outlined\",\n    label: \"Title\",\n    fullWidth: true,\n    value: postData.title,\n    onChange: e => setPostData({ ...postData,\n      title: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    name: \"message\",\n    v: true,\n    ariant: \"outlined\",\n    label: \"Message\",\n    fullWidth: true,\n    multiline: true,\n    rows: 4,\n    value: postData.message,\n    onChange: e => setPostData({ ...postData,\n      message: e.target.value\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    name: \"tags\",\n    variant: \"outlined\",\n    label: \"Tags (coma separated)\",\n    fullWidth: true,\n    value: postData.tags,\n    onChange: e => setPostData({ ...postData,\n      tags: e.target.value.split(',')\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.fileInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FileBase, {\n    type: \"file\",\n    multiple: false,\n    onDone: ({\n      base64\n    }) => setPostData({ ...postData,\n      selectedFile: base64\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    className: classes.buttonSubmit,\n    variant: \"contained\",\n    color: \"primary\",\n    size: \"large\",\n    type: \"submit\",\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, \"Submit\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"contained\",\n    color: \"secondary\",\n    size: \"small\",\n    onClick: clear,\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, \"Clear\")));\n};\n\nexport default Form;","map":{"version":3,"sources":["/home/arokee/React_JS/mern-memo-app/client/src/components/Form/Form.js"],"names":["React","useState","useEffect","TextField","Button","Typography","Paper","useDispatch","useSelector","FileBase","useStyles","createPost","updatePost","Form","currentId","setCurrentId","postData","setPostData","creator","title","message","tags","selectedFile","post","state","posts","find","_id","dispatch","classes","clear","handleSubmit","e","preventDefault","paper","root","form","target","value","split","fileInput","base64","buttonSubmit"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { TextField, Button, Typography, Paper } from '@material-ui/core';\nimport { useDispatch, useSelector } from 'react-redux';\nimport FileBase from 'react-file-base64';\n\nimport useStyles from './styles';\nimport { createPost, updatePost } from '../../actions/posts';\n\nconst Form = ({ currentId, setCurrentId }) => {\n  const [postData, setPostData] = useState({\n    creator: '',\n    title: '',\n    message: '',\n    tags: '',\n    selectedFile: ''\n  });\n  const post = useSelector(\n    (state) => (currentId ? state.posts.find(\n      (message) => message._id === currentId) : null));\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  useEffect(() => {\n    if (post) setPostData(post);\n  }, [post]);\n\n  const clear = () => {\n    setCurrentId(0);\n    setPostData({\n      creator: '',\n      title: '',\n      message: '',\n      tags: '',\n      selectedFile: ''\n    });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    if (currentId === 0) {\n      dispatch(createPost(postData));\n      clear();\n    } else {\n      dispatch(updatePost(currentId, postData));\n      clear();\n    }\n  };\n\n  return (\n    <Paper className={classes.paper}>\n      <form autoComplete=\"off\" noValidate className={`${classes.root} ${classes.form}`}\n        onSubmit={handleSubmit}>\n        <Typography\n          variant=\"h6\">{currentId ? `Editing \"${post.title}\"` : 'Creating a Memory'}\n        </Typography>\n        <TextField\n          name=\"creator\"\n          variant=\"outlined\"\n          label=\"Creator\" fullWidth\n          value={postData.creator} onChange={(e) => setPostData(\n            { ...postData, creator: e.target.value })} />\n        <TextField name=\"title\" variant=\"outlined\"\n          label=\"Title\" fullWidth value={postData.title}\n          onChange={(e) => setPostData(\n            { ...postData, title: e.target.value })} />\n        <TextField\n          name=\"message\" v\n          ariant=\"outlined\"\n          label=\"Message\" fullWidth\n          multiline rows={4} value={postData.message}\n          onChange={(e) => setPostData({ ...postData, message: e.target.value })} />\n        <TextField\n          name=\"tags\" variant=\"outlined\"\n          label=\"Tags (coma separated)\" fullWidth\n          value={postData.tags} onChange={(e) => setPostData(\n            { ...postData, tags: e.target.value.split(',') })} />\n\n        <div className={classes.fileInput}>\n          <FileBase type=\"file\" multiple={false}\n            onDone={({ base64 }) => setPostData({ ...postData, selectedFile: base64 })} />\n        </div>\n\n        <Button className={classes.buttonSubmit} variant=\"contained\"\n          color=\"primary\" size=\"large\" type=\"submit\" fullWidth>Submit</Button>\n        <Button variant=\"contained\" color=\"secondary\" size=\"small\"\n          onClick={clear} fullWidth>Clear</Button>\n      </form>\n    </Paper>\n  );\n};\n\nexport default Form;\n"]},"metadata":{},"sourceType":"module"}