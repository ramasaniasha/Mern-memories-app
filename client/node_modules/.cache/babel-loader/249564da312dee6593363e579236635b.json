{"ast":null,"code":"var _jsxFileName = \"/home/arokee/React_JS/mern-memo-app/client/src/components/Auth/Auth.js\";\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Avatar, Button, Paper, Grid, Typography, Container } from '@material-ui/core';\nimport { useNavigate } from 'react-router-dom';\nimport { GoogleLogin } from 'react-google-login';\nimport LockOutLinedIcon from '@material-ui/icons/LockOutlined';\nimport { initializeApp } from \"firebase/app\";\nimport { signInWithGoogle } from \"./Firebase\";\nimport Icon from './icon';\nimport { signin, signup } from '../../actions/auth';\nimport { AUTH } from '../../constants/actionTypes';\nimport useStyles from './style';\nimport Input from './input';\nconst initialState = {\n  firstName: '',\n  lastName: '',\n  email: '',\n  password: '',\n  confirmPassword: ''\n};\n\nconst Auth = () => {\n  const [form, setForm] = useState(initialState);\n  const [isSignup, setIsSignup] = useState(false);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const classes = useStyles();\n  const [showPassword, setShowPassword] = useState(false);\n\n  const handleShowPassword = () => setShowPassword(!showPassword);\n\n  const switchMode = () => {\n    setForm(initialState);\n    setIsSignup(prevIsSignup => !prevIsSignup);\n    setShowPassword(false);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (isSignup) {\n      dispatch(signup(form, navigate));\n    } else {\n      dispatch(signin(form, navigate));\n    }\n  };\n\n  const googleSuccess = async res => {\n    const result = res === null || res === void 0 ? void 0 : res.profileObj;\n    const token = res === null || res === void 0 ? void 0 : res.tokenId;\n\n    try {\n      dispatch({\n        type: AUTH,\n        data: {\n          result,\n          token\n        }\n      });\n      navigate('/');\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const googleError = () => console.log('Google Sign In was unsuccessful. Try again later');\n\n  const handleChange = e => setForm({ ...form,\n    [e.target.name]: e.target.value\n  });\n\n  return /*#__PURE__*/React.createElement(Container, {\n    component: \"main\",\n    size: \"xs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    elevation: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    className: classes.avatar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(LockOutLinedIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Typography, {\n    component: \"h1\",\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, isSignup ? 'Sign up' : 'Sign in'), /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.form,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }, isSignup && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Input, {\n    name: \"firstName\",\n    label: \"First Name\",\n    handleChange: handleChange,\n    autoFocus: true,\n    half: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    name: \"lastName\",\n    label: \"Last Name\",\n    handleChange: handleChange,\n    half: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Input, {\n    name: \"email\",\n    label: \"Email Address\",\n    handleChange: handleChange,\n    type: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    name: \"password\",\n    label: \"Password\",\n    handleChange: handleChange,\n    type: showPassword ? 'text' : 'password',\n    handleShowPassword: handleShowPassword,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }), isSignup && /*#__PURE__*/React.createElement(Input, {\n    name: \"confirmPassword\",\n    label: \"Repeat Password\",\n    handleChange: handleChange,\n    type: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 26\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    fullWidth: true,\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.submit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, isSignup ? 'Sign Up' : 'Sign In'), /*#__PURE__*/React.createElement(GoogleLogin, {\n    clientId: \"18279318581-o6nrm3r12nnjstqdidvk8cd32n7hpj46.apps.googleusercontent.com\",\n    render: renderProps => /*#__PURE__*/React.createElement(Button, {\n      className: classes.googleButton,\n      color: \"primary\",\n      fullWidth: true,\n      onClick: renderProps.onClick,\n      disabled: renderProps.disabled,\n      startIcon: /*#__PURE__*/React.createElement(Icon, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 60\n        }\n      }),\n      variant: \"contained\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 15\n      }\n    }, \"Google Sign In\"),\n    onSuccess: googleSuccess,\n    onFailure: googleError,\n    cookiePolicy: \"single_host_origin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"flex-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: switchMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 15\n    }\n  }, isSignup ? 'Already have an account? Sign in' : \"Don't have an account? Sign Up\"))))));\n};\n\nexport default Auth;","map":{"version":3,"sources":["/home/arokee/React_JS/mern-memo-app/client/src/components/Auth/Auth.js"],"names":["React","useState","useDispatch","Avatar","Button","Paper","Grid","Typography","Container","useNavigate","GoogleLogin","LockOutLinedIcon","initializeApp","signInWithGoogle","Icon","signin","signup","AUTH","useStyles","Input","initialState","firstName","lastName","email","password","confirmPassword","Auth","form","setForm","isSignup","setIsSignup","dispatch","navigate","classes","showPassword","setShowPassword","handleShowPassword","switchMode","prevIsSignup","handleSubmit","e","preventDefault","googleSuccess","res","result","profileObj","token","tokenId","type","data","error","console","log","googleError","handleChange","target","name","value","paper","avatar","submit","renderProps","googleButton","onClick","disabled"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Avatar, Button, Paper, Grid, Typography, Container } from '@material-ui/core';\nimport { useNavigate } from 'react-router-dom';\nimport { GoogleLogin } from 'react-google-login';\nimport LockOutLinedIcon from '@material-ui/icons/LockOutlined';\nimport { initializeApp } from \"firebase/app\";\nimport { signInWithGoogle } from \"./Firebase\";\n\nimport Icon from './icon';\nimport { signin, signup } from '../../actions/auth';\nimport { AUTH } from '../../constants/actionTypes';\nimport useStyles from './style';\nimport Input from './input';\n\nconst initialState = { firstName: '', lastName: '', email: '', password: '', confirmPassword: '' };\n\nconst Auth = () => {\n  const [form, setForm] = useState(initialState);\n  const [isSignup, setIsSignup] = useState(false);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const classes = useStyles();\n\n  const [showPassword, setShowPassword] = useState(false);\n  const handleShowPassword = () => setShowPassword(!showPassword);\n\n  const switchMode = () => {\n    setForm(initialState);\n    setIsSignup((prevIsSignup) => !prevIsSignup);\n    setShowPassword(false);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (isSignup) {\n      dispatch(signup(form, navigate));\n    } else {\n      dispatch(signin(form, navigate));\n    }\n  };\n\n  const googleSuccess = async (res) => {\n    const result = res?.profileObj;\n    const token = res?.tokenId;\n\n    try {\n      dispatch({ type: AUTH, data: { result, token } });\n\n      navigate('/');\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const googleError = () => console.log('Google Sign In was unsuccessful. Try again later');\n\n  const handleChange = (e) => setForm({ ...form, [e.target.name]: e.target.value });\n  return (\n    <Container component='main' size='xs'>\n      <Paper className={classes.paper} elevation={3}>\n        <Avatar className={classes.avatar}>\n          <LockOutLinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">{isSignup ? 'Sign up' : 'Sign in'}</Typography>\n        <form className={classes.form} onSubmit={handleSubmit}>\n          <Grid container spacing={2}>\n            {isSignup && (\n              <>\n                <Input name=\"firstName\" label=\"First Name\" handleChange={handleChange} autoFocus half />\n                <Input name=\"lastName\" label=\"Last Name\" handleChange={handleChange} half />\n              </>\n            )}\n            <Input name=\"email\" label=\"Email Address\" handleChange={handleChange} type=\"email\" />\n            <Input name=\"password\" label=\"Password\" handleChange={handleChange} type={showPassword ? 'text' : 'password'} handleShowPassword={handleShowPassword} />\n            {isSignup && <Input name=\"confirmPassword\" label=\"Repeat Password\" handleChange={handleChange} type=\"password\" />}\n          </Grid>\n          <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\" className={classes.submit}>\n            {isSignup ? 'Sign Up' : 'Sign In'}\n          </Button>\n          <GoogleLogin\n            clientId=\"18279318581-o6nrm3r12nnjstqdidvk8cd32n7hpj46.apps.googleusercontent.com\"\n            render={(renderProps) => (\n              <Button className={classes.googleButton} color=\"primary\" fullWidth\n                onClick={renderProps.onClick}\n                disabled={renderProps.disabled} startIcon={<Icon />} \n                variant=\"contained\">\n                Google Sign In\n              </Button>\n            )}\n            onSuccess={googleSuccess}\n            onFailure={googleError}\n            cookiePolicy=\"single_host_origin\"\n          />\n          <Grid container justify=\"flex-end\">\n            <Grid item>\n              <Button onClick={switchMode}>\n                {isSignup ? 'Already have an account? Sign in' : \"Don't have an account? Sign Up\"}\n              </Button>\n            </Grid>\n          </Grid>\n        </form>\n      </Paper>\n    </Container>\n  )\n}\n\nexport default Auth"]},"metadata":{},"sourceType":"module"}