{"ast":null,"code":"import { FETCH_ALL, FETCH_POST, CREATE, UPDATE, DELETE, LIKE } from '../constants/actionTypes';\nexport default ((state = [], action) => {\n  switch (action.type) {\n    case FETCH_ALL:\n      return action.payload;\n\n    case FETCH_POST:\n      // const post = action.post\n      // console.log(post)\n      return [...posts, action.payload];\n\n    case LIKE:\n      return posts.map(post => post._id === action.payload._id ? action.payload : post);\n\n    case CREATE:\n      return [...state, action.payload];\n\n    case UPDATE:\n      return posts.map(post => post._id === action.payload._id ? action.payload : post);\n\n    case DELETE:\n      return posts.filter(post => post._id !== action.payload);\n\n    default:\n      return posts;\n  }\n});","map":{"version":3,"sources":["/home/arokee/React_JS/mern-memo-app/client/src/reducers/posts.js"],"names":["FETCH_ALL","FETCH_POST","CREATE","UPDATE","DELETE","LIKE","state","action","type","payload","posts","map","post","_id","filter"],"mappings":"AAAA,SAASA,SAAT,EAAmBC,UAAnB,EAA+BC,MAA/B,EAAuCC,MAAvC,EAA+CC,MAA/C,EAAuDC,IAAvD,QAAmE,0BAAnE;AAEA,gBAAe,CAACC,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwB;AACrC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKR,SAAL;AACE,aAAOO,MAAM,CAACE,OAAd;;AACF,SAAKR,UAAL;AACE;AACA;AACA,aAAO,CAAC,GAAGS,KAAJ,EAAWH,MAAM,CAACE,OAAlB,CAAP;;AAEF,SAAKJ,IAAL;AACE,aAAOK,KAAK,CAACC,GAAN,CAAWC,IAAD,IAAWA,IAAI,CAACC,GAAL,KAAaN,MAAM,CAACE,OAAP,CAAeI,GAA5B,GAAkCN,MAAM,CAACE,OAAzC,GAAmDG,IAAxE,CAAP;;AACF,SAAKV,MAAL;AACE,aAAO,CAAC,GAAGI,KAAJ,EAAWC,MAAM,CAACE,OAAlB,CAAP;;AACF,SAAKN,MAAL;AACE,aAAOO,KAAK,CAACC,GAAN,CAAWC,IAAD,IAAWA,IAAI,CAACC,GAAL,KAAaN,MAAM,CAACE,OAAP,CAAeI,GAA5B,GAAkCN,MAAM,CAACE,OAAzC,GAAmDG,IAAxE,CAAP;;AACF,SAAKR,MAAL;AACE,aAAOM,KAAK,CAACI,MAAN,CAAcF,IAAD,IAAUA,IAAI,CAACC,GAAL,KAAaN,MAAM,CAACE,OAA3C,CAAP;;AACF;AACE,aAAOC,KAAP;AAjBJ;AAmBD,CApBD","sourcesContent":["import { FETCH_ALL,FETCH_POST, CREATE, UPDATE, DELETE, LIKE } from '../constants/actionTypes';\n\nexport default (state = [], action) => {\n  switch (action.type) {\n    case FETCH_ALL:\n      return action.payload;\n    case FETCH_POST:\n      // const post = action.post\n      // console.log(post)\n      return [...posts, action.payload];\n      \n    case LIKE:\n      return posts.map((post) => (post._id === action.payload._id ? action.payload : post));\n    case CREATE:\n      return [...state, action.payload];\n    case UPDATE:\n      return posts.map((post) => (post._id === action.payload._id ? action.payload : post));\n    case DELETE:\n      return posts.filter((post) => post._id !== action.payload);\n    default:\n      return posts;\n  }\n};\n\n"]},"metadata":{},"sourceType":"module"}