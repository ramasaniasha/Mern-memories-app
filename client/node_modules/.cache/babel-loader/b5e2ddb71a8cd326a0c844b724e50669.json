{"ast":null,"code":"var _jsxFileName = \"/home/arokee/React_JS/mern-memo-app/client/src/components/PostDetails/Comment.js\";\nimport React, { useState, useRef } from \"react\";\nimport { Typography, TextField, Button } from \"@material-ui/core/\";\nimport { useDispatch } from \"react-redux\";\nimport { commentPost } from \"../../actions/posts\";\nimport useStyles from \"./styles\";\n\nconst Comments = ({\n  post\n}) => {\n  var _user$result2;\n\n  const user = JSON.parse(localStorage.getItem(\"profile\"));\n  const [comment, setComment] = useState(\"\");\n  const dispatch = useDispatch();\n  const [comments, setComments] = useState(post === null || post === void 0 ? void 0 : post.comments);\n  const classes = useStyles();\n  const commentsRef = useRef();\n\n  const handleComment = async () => {\n    var _user$result;\n\n    const newComments = await dispatch(commentPost(`${user === null || user === void 0 ? void 0 : (_user$result = user.result) === null || _user$result === void 0 ? void 0 : _user$result.name}:\n     ${comment}`, post._id));\n    setComments(newComments);\n    window.location.reload();\n    setComment(\"\");\n    commentsRef.current.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.commentsOuterContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.commentsInnerContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }, \"Comments\"), comments === null || comments === void 0 ? void 0 : comments.map((c, i) => /*#__PURE__*/React.createElement(Typography, {\n    key: i,\n    gutterBottom: true,\n    variant: \"subtitle1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 15\n    }\n  }, c.split(\": \")[0]), c.split(\":\")[1])), /*#__PURE__*/React.createElement(\"div\", {\n    ref: commentsRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  })), (user === null || user === void 0 ? void 0 : (_user$result2 = user.result) === null || _user$result2 === void 0 ? void 0 : _user$result2.name) && /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: \"70%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    gutterBottom: true,\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, \"Write a comment\"), /*#__PURE__*/React.createElement(TextField, {\n    fullWidth: true,\n    rows: 4,\n    variant: \"outlined\",\n    label: \"Comment\",\n    multiline: true,\n    value: comment,\n    onChange: e => setComment(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    style: {\n      marginTop: \"10px\"\n    },\n    fullWidth: true,\n    disabled: !comment.length,\n    color: \"primary\",\n    variant: \"contained\",\n    onClick: handleComment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, \"Comment\"))));\n};\n\nexport default Comments;","map":{"version":3,"sources":["/home/arokee/React_JS/mern-memo-app/client/src/components/PostDetails/Comment.js"],"names":["React","useState","useRef","Typography","TextField","Button","useDispatch","commentPost","useStyles","Comments","post","user","JSON","parse","localStorage","getItem","comment","setComment","dispatch","comments","setComments","classes","commentsRef","handleComment","newComments","result","name","_id","window","location","reload","current","scrollIntoView","behavior","commentsOuterContainer","commentsInnerContainer","map","c","i","split","width","e","target","value","marginTop","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,QAAwC,OAAxC;AACA,SAASC,UAAT,EAAqBC,SAArB,EAAgCC,MAAhC,QAA8C,oBAA9C;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,SAASC,WAAT,QAA4B,qBAA5B;AACA,OAAOC,SAAP,MAAsB,UAAtB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAAA;;AAC7B,QAAMC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAX,CAAb;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBhB,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAMiB,QAAQ,GAAGZ,WAAW,EAA5B;AACA,QAAM,CAACa,QAAD,EAAWC,WAAX,IAA0BnB,QAAQ,CAACS,IAAD,aAACA,IAAD,uBAACA,IAAI,CAAES,QAAP,CAAxC;AACA,QAAME,OAAO,GAAGb,SAAS,EAAzB;AACA,QAAMc,WAAW,GAAGpB,MAAM,EAA1B;;AAEA,QAAMqB,aAAa,GAAG,YAAY;AAAA;;AAChC,UAAMC,WAAW,GAAG,MAAMN,QAAQ,CAChCX,WAAW,CACR,GAAEI,IAAH,aAAGA,IAAH,uCAAGA,IAAI,CAAEc,MAAT,iDAAG,aAAcC,IAAK;OACvBV,OAAQ,EAFE,EAGTN,IAAI,CAACiB,GAHI,CADqB,CAAlC;AAOAP,IAAAA,WAAW,CAACI,WAAD,CAAX;AACAI,IAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACAb,IAAAA,UAAU,CAAC,EAAD,CAAV;AACAK,IAAAA,WAAW,CAACS,OAAZ,CAAoBC,cAApB,CAAmC;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAAnC;AACD,GAZD;;AAcA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAEZ,OAAO,CAACa,sBAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAEb,OAAO,CAACc,sBAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,YAAY,MAAxB;AAAyB,IAAA,OAAO,EAAC,IAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAIGhB,QAJH,aAIGA,QAJH,uBAIGA,QAAQ,CAAEiB,GAAV,CAAc,CAACC,CAAD,EAAIC,CAAJ,kBACb,oBAAC,UAAD;AAAY,IAAA,GAAG,EAAEA,CAAjB;AAAoB,IAAA,YAAY,MAAhC;AAAiC,IAAA,OAAO,EAAC,WAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAASD,CAAC,CAACE,KAAF,CAAQ,IAAR,EAAc,CAAd,CAAT,CADF,EAEGF,CAAC,CAACE,KAAF,CAAQ,GAAR,EAAa,CAAb,CAFH,CADD,CAJH,eAUE;AAAK,IAAA,GAAG,EAAEjB,WAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,CADF,EAaG,CAAAX,IAAI,SAAJ,IAAAA,IAAI,WAAJ,6BAAAA,IAAI,CAAEc,MAAN,gEAAcC,IAAd,kBACC;AAAK,IAAA,KAAK,EAAE;AAAEc,MAAAA,KAAK,EAAE;AAAT,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,YAAY,MAAxB;AAAyB,IAAA,OAAO,EAAC,IAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,eAIE,oBAAC,SAAD;AACE,IAAA,SAAS,MADX;AAEE,IAAA,IAAI,EAAE,CAFR;AAGE,IAAA,OAAO,EAAC,UAHV;AAIE,IAAA,KAAK,EAAC,SAJR;AAKE,IAAA,SAAS,MALX;AAME,IAAA,KAAK,EAAExB,OANT;AAOE,IAAA,QAAQ,EAAGyB,CAAD,IAAOxB,UAAU,CAACwB,CAAC,CAACC,MAAF,CAASC,KAAV,CAP7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,eAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbF,eAcE,oBAAC,MAAD;AACE,IAAA,KAAK,EAAE;AAAEC,MAAAA,SAAS,EAAE;AAAb,KADT;AAEE,IAAA,SAAS,MAFX;AAGE,IAAA,QAAQ,EAAE,CAAC5B,OAAO,CAAC6B,MAHrB;AAIE,IAAA,KAAK,EAAC,SAJR;AAKE,IAAA,OAAO,EAAC,WALV;AAME,IAAA,OAAO,EAAEtB,aANX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAdF,CAdJ,CADF,CADF;AA6CD,CAnED;;AAqEA,eAAed,QAAf","sourcesContent":["import React, { useState, useRef } from \"react\";\nimport { Typography, TextField, Button } from \"@material-ui/core/\";\nimport { useDispatch } from \"react-redux\";\n\nimport { commentPost } from \"../../actions/posts\";\nimport useStyles from \"./styles\";\n\nconst Comments = ({ post }) => {\n  const user = JSON.parse(localStorage.getItem(\"profile\"));\n  const [comment, setComment] = useState(\"\");\n  const dispatch = useDispatch();\n  const [comments, setComments] = useState(post?.comments);\n  const classes = useStyles();\n  const commentsRef = useRef();\n\n  const handleComment = async () => {\n    const newComments = await dispatch(\n      commentPost(\n        `${user?.result?.name}:\n     ${comment}`,\n        post._id\n      )\n    );\n    setComments(newComments);\n    window.location.reload();\n    setComment(\"\");\n    commentsRef.current.scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  return (\n    <div>\n      <div className={classes.commentsOuterContainer}>\n        <div className={classes.commentsInnerContainer}>\n          <Typography gutterBottom variant=\"h6\">\n            Comments\n          </Typography>\n          {comments?.map((c, i) => (\n            <Typography key={i} gutterBottom variant=\"subtitle1\">\n              <strong>{c.split(\": \")[0]}</strong>\n              {c.split(\":\")[1]}\n            </Typography>\n          ))}\n          <div ref={commentsRef} />\n        </div>\n        {user?.result?.name && (\n          <div style={{ width: \"70%\" }}>\n            <Typography gutterBottom variant=\"h6\">\n              Write a comment\n            </Typography>\n            <TextField\n              fullWidth\n              rows={4}\n              variant=\"outlined\"\n              label=\"Comment\"\n              multiline\n              value={comment}\n              onChange={(e) => setComment(e.target.value)}\n            />\n            <br />\n            <Button\n              style={{ marginTop: \"10px\" }}\n              fullWidth\n              disabled={!comment.length}\n              color=\"primary\"\n              variant=\"contained\"\n              onClick={handleComment}\n            >\n              Comment\n            </Button>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Comments;\n"]},"metadata":{},"sourceType":"module"}